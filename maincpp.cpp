#include <iostream> //стандартная библиотека ввода-вывода
using namespace std; //пространство имен std

void initialize(int** arr, int size) //функция инициализации элементов массива
{
	for (int i = 0; i < size; i++) //цикл работы с элементами массива
	{
		(*arr)[i] = rand() % 26; //генерация рандомного значения от 0 до 25 и присвоение его элементу массива
		cout << (*arr)[i] << "\t"; //вывод элемента массива
	}
}

/*1. Написать функцию, которая получает два указателя на массивы и их размеры, создает новый массив суммарного
размера, копирует в него последовательно элементы обоих массивов.*/
void unite_mass(int** arr1, int size1, int** arr2, int size2) //функция соединения двух массивов в один
{
	int* mass = new int[size1 + size2]; //оглашение нового массива размером в сумму размеров массивов, из которых он состоит
	for (int i = 0; i < size1; i++) //цикл копирования первого массива в новый
	{
		mass[i] = (*arr1)[i]; //присвоение элементу нового массива значения соответсвенно индексу элемента первого массива
	}
	for (int i = size1, j=0; i < size1 + size2; i++, j++) //цикл присвоения остальным элементам нового массива элементов второго
	{
		mass[i] = (*arr2)[j]; //присвоение элементу нового массива значения элемента второго массива
	}
	cout << "Суммарный массив: ";
	for (int i = 0; i < size1 + size2; i++) //цикл вывода элементов нового массива
	{
		cout << mass[i] << "\t"; //вывод элемента массива
	}
}

/*2. Написать функцию, которая получает указатель на массив, его размер и элемент, который необходимо добавить в массив.
Функция должна создать новый массив с новым элементом.*/
void add_elem(int** arr, int size, int elem) //функция добавления элемента в массив
{
	int* mass = new int[size + 1]; //оглашение нового массива размером на 1 больше изначального
	for (int i = 0; i < size; i++) //цикл копирования элементов массива
	{
		mass[i] = (*arr)[i]; //присвоение элементу нового массива значения соответсвенного по индексу элемента изначального
	}
	mass[size] = elem; //присвоения последнему элементу нового массива значения добавляемого элемента
	cout << "Массив с новым элементом: ";
	for (int i = 0; i < size + 1; i++) //цикл вывода элеменов массива
	{
		cout << mass[i] << "\t"; //вывод элемента массива
	}
}

//3. Написать функцию, которая получает указатель на массив, его размер и номер элемента, который необходимо удалить из массива.
void del_elem(int** arr, int size, int num) //функция удаления элемента из массива
{
	int ind = num - 1; //оглашение переменной индекса удаляемого элемента
	int* mass = new int[size - 1]; //оглашение нового массива без удаленого элемента
	for (int i = 0; i < ind; i++) //цикл копирования элементов изначального массива в новый
	{
		mass[i] = (*arr)[i]; //присвоение элементу нового массива значения соответсвенного по индексу элемента изначального
	}
	for (int i = ind; i < size - 1; i++) //цикл копирования остальных элементов массива после удаляемого
	{
		mass[i] = (*arr)[i + 1]; //присвоение элементу нового массива значения элемента изначального массива на индекс старше 
	}
	cout << "Второй массив после удаления элемента: ";
	for (int i = 0; i < size - 1; i++) //цикл вывода элементов массива без удаленого элемента
	{
		cout << mass[i] << "\t"; //вывод элемента нового массива
	}
}

int main() //главная функция программы, точка ее старта
{
	setlocale(0, ".1251"); //локализация кода программы
	srand(time(0)); //при каждом запуске программы будут генерироваться разные значения
	int size1, size2; //оглашение переменных размеров первого и второго массива
	cout << "Введите размер первого массива: ";
	cin >> size1; //ввод размера первого массива
	cout << "Введите размер второго массива: ";
	cin >> size2; //ввод размера второго массива
	int* arr1 = new int[size1]; //оглашение первого массива
	int* arr2 = new int[size2]; //оглашение второго массива
	cout << "Первый массив: ";
	initialize(&arr1, size1); //вызов функции инциализации элементов массива
	cout << endl; //переход на следующую строку
	cout << "Второй массив: ";
	initialize(&arr2, size2); //вызов функции инциализации элементов массива
	cout << endl; //переход на следующую строку
	void(*func1)(int** arr1, int size1, int** arr2, int size2) = unite_mass;
	//оглашение указателя на функцию соединения двух массивов в один
	func1(&arr1,size1,&arr2,size2); //вызов функции соединения двух массивов в один

	cout << "\n----------------------------------------------------------\n";

	void(*func2)(int** arr, int size, int elem) = add_elem; //оглашения указателя на функцию добавления элемента в массив
	cout << "Какое число Вы хотите добавить в первый массив? ";
	int elem; //оглашение переменной значения элемента, который пользователь хочет добавить
	cin >> elem; //ввод значения элемента, который пользователь хочет добавить
	func2(&arr1, size1, elem); //вызов функции добавления элемента в массив


	cout << "\n----------------------------------------------------------\n";

	func2 = del_elem; //перенаправление в указатель на функцию функции удаления элемента из массива
	cout << "Введите номер элемента второго массива, который хотите удалить: ";
	int num; //оглашение переменной номера элемента, который хочет удалить пользователь
	cin >> num; //ввод номера элемента, который хочет удалить пользователь
	func2(&arr2, size2, num); //вызов функции удаления элемента из массива

	delete[]arr1; //удаления динамического массива arr1
	delete[]arr2; //удаления динамического массива arr2
}